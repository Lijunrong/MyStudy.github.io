在讲引用作为函数参数进行传递时，实质上传递的是实参本身，即传递进来的不是实参的一个拷贝，因此对形参的修改其实是对实参的修改，所以在用引用进行参数传递时，不仅节约时间，而且可以节约空间。参考链接“http://www.cnblogs.com/dolphin0520/archive/2011/04/03/2004869.html”


指针和引用的定义和性质区别：

指针：指针是一个变量，只不过这个变量存储的是一个地址，指向内存的一个存储单元；

引用：是跟原来的变量实质上是同一个东西，只不过是原变量的一个别名而已。如：

int a=1;int *p=&a;

int a=1;int &b=a;

上面定义了一个整形变量和一个指针变量p，该指针变量指向a的存储单元，即p的值是a存储单元的地址。

而下面2句定义了一个整形变量a和这个整形a的引用b，事实上a和b是同一个东西，在内存占有同一个存储单元。且引用一定指向一个对象，所以在C++里，引用应被初始化。



参考博客：http://blog.csdn.net/thisispan/article/details/7456169


★ 相同点：

    1. 都是地址的概念；

    指针指向一块内存，它的内容是所指内存的地址；引用是某块内存的别名。

    ★ 区别：

    1. 指针是一个实体，而引用仅是个别名；

    2. 引用使用时无需解引用（*），指针需要解引用；

    3. 引用只能在定义时被初始化一次，之后不可变；指针可变；

    引用“从一而终” ^_^

    4. 引用没有 const，指针有 const，const 的指针不可变；

    5. 引用不能为空，指针可以为空；

    6. “sizeof 引用”得到的是所指向的变量（对象）的大小，而“sizeof 指针”得到的是指针本身（所指向的变量或对象的地址）的大小；

    typeid（T） == typeid（T&） 恒为真，sizeof（T） == sizeof（T&） 恒为真，但是当引用作为成员时，其占用空间与指针相同（没找到标准的规定）。

    7. 指针和引用的自增（++）运算意义不一样；







