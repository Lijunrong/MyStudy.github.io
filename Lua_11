I/O库为文件操作提供了两种不同模型：简单模型和完整模型。
简单模型假设有一个当前输入文件和一个当前输出文件，它的I/O操作均作用于这些文件上。
完整模型则使用显示的文件句柄，它采用面向对象的风格，并将所有操作定义为文件句柄上的方法。



1 简单模型：

简单模型所有操作都作用于两个当前文件：用函数io.input和io.output可以改变这两个当前文件。io.input(filename)调用会以只读模式打开指定的文件，并将其设为当
前输入文件。之后除非再次调用io.input(),否则所有的输入都将来源于这个文件。io.write也是如此。


2 完整模型：
要打开一个文件，可以使用io.open函数，两个参数，一个是文件名，一个是模式字符串。 



3 性能小诀窍
通常在Lua中，一次性的读取整个文件比逐行读取要快一些，但必须处理一些大文件（几十兆或者几百兆）时，就无法一次性读取所有内容，如果希望以最高的性能来处理这种
大文件，那么最快的方法就是用足够大的块（例如，8KB大小的块）来读取文件，为了避免在行中间断开，只需在读一个块时再加上一行：
local lines rest = f:read(BUFSIZE,"*line")
其中变量rest包含了被块断开的那行的剩余部分。这样就可以将块与行的剩余部分连接起来。从而得到一个起止于行边界上的块。
